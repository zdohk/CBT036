*   FIXED TO PREVENT LOOP WITH LONG COMMENTS - S.GOLOB - NEWSWEEK
*     THIS VERSION STILL INTRODUCES SPACES SOMETIMES WHEN GOING
*     FROM VB-255 TO FB-80.  IT SEEMS OK THE OTHER WAY.
********************************************************************
*          DATA SET CBT1018    AT LEVEL 001 AS OF 11/19/79
*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB         00001
*              OR VISE VERSA                                            00002
*I/O           SYSUT1  INPUT CLIST                                      00003
*              SYSUT2  OUTPUT CLIST                                     00004
*              SYSPRINT LISTING                                         00005
*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8               00006
*              FB IN 73-80                                              00007
*              RETURN CODE                                              00008
*              8 JOB TERMINATED BEFORE START OF COPY                    00009
*              12 JOB TERMINATED AFTER START OF COPY                    00010
*                                                                       00011
         MACRO                                                          00012
         SYMBR                                                          00013
**                           EQUATES FOR SYMBOLIC REG USAGE             00014
R0       EQU   0                                                        00015
R1       EQU   1                                                        00016
R2       EQU   2                                                        00017
R3       EQU   3                                                        00018
R4       EQU   4                                                        00019
R5       EQU   5                                                        00020
R6       EQU   6                                                        00021
R7       EQU   7                                                        00022
R8       EQU   8                                                        00023
R9       EQU   9                                                        00024
R10      EQU   10                                                       00025
R11      EQU   11                                                       00026
R12      EQU   12                                                       00027
R13      EQU   13                                                       00028
R14      EQU   14                                                       00029
R15      EQU   15                                                       00030
RA       EQU   10                                                       00031
RB       EQU   11                                                       00032
RD       EQU   13                                                       00033
RE       EQU   14                                                       00034
RF       EQU   15                                                       00035
         MEND                                                           00036
         MACRO                                                          00037
&NAME    SAVEX &AREA,&BASE,&VERSION,&INIT,&TESTRAN                      00038
.* DPHQ SYSTEM/360 - OPERATING SYSTEM SSS                               00039
.* V4M0 DECEMBER 2, 1966 F. W. VOSS                                     00040
         LCLA  &A1                                                      00041
         LCLC  &TEST                                                    00042
&TEST    SETC  '&AREA'(1,5)                                             00043
         AIF   ('&AREA' NE '').GD1                                      00044
         MNOTE 12,'SAVE AREA NAME MISSING - NO GEN'                     00045
         MEXIT                                                          00046
.GD1     ANOP                                                           00047
&A1      SETA  &BASE                                                    00048
         USING *,15                                                     00049
&NAME    B     22(0,15)            BRANCH AROUND ID                     00050
         DC    FL1'18'                                                  00051
         AIF   ('&NAME' NE '').GD2                                      00052
         DC    CL9'&SYSECT'        IDENTIFIER                           00053
         AGO   .CT1                                                     00054
.GD2     DC    CL9'&NAME'          IDENTIFIER                           00055
.CT1     DC    CL8'&VERSION'       VERSION                              00056
         STM   14,12,12(13)        SAVE REGISTERS                       00057
         ST    13,&AREA+4               CHAIN FORWARD                   00058
         CNOP  0,4                                                      00059
         AIF   (&A1 GT 2).MV2                                           00060
         AIF   (&A1 EQ 2).GD3                                           00061
         AGO   .CT5                                                     00062
.MV2     MNOTE 'INVALID BASE REQUEST - USING 2'                         00063
         AGO   .GD3                                                     00064
.CT5     ANOP                                                           00065
         BAL   13,&AREA+72    SETUP SAVE AREA POINTER AND BASE          00066
         DROP  15                                                       00067
         USING *,13                     ESTABLISH ADDRESSABILITY        00068
&AREA    DC    18F'0'              SAVE AREA                            00069
         L     15,&AREA+4                                               00070
         ST    13,8(0,15)               CHAIN BACK                      00071
         AGO   .CT7                                                     00072
.GD3     ANOP                                                           00073
         BAL   13,&AREA+76    SETUP SAVE AREA POINTER AND BASE          00074
         DROP  15                                                       00075
         USING *,13,12                  ESTABLISH ADDRESSABILITY        00076
&AREA    DC    18F'0'              SAVE AREA                            00077
         DC    AL4(&AREA+4096)                                          00078
         L     15,&AREA+4                                               00079
         ST    13,8(0,15)               CHAIN BACK                      00080
         L     12,&AREA+72              ESTABLISH 2ND BASE              00081
.CT7     ANOP                                                           00082
         AIF   ('&INIT' EQ '').CT9                                      00083
.CT9     ANOP                                                           00084
         AIF   ('&TESTRAN' EQ '').CT6                                   00085
         AIF   ('&TESTRAN' EQ 'TEST').CT8                               00086
         MNOTE 'INVALID TESTRAN EDIT REQUEST'                           00087
         AGO   .CT6                                                     00088
.CT8     ANOP                                                           00089
*                            TESTRAN SPIE MACRO                         00090
         SPIE  &TEST.EXT,((1,15))                                       00091
         B     &TEST.ABE     BRANCH AROUND TESTRAN DUMP                 00092
         SPACE 2                                                        00093
&TEST.EXT BALR 15,0          ESTABLISH ADDRESSABILITY FOR TESTRAN ABEND 00094
         DROP  13                                                       00095
         USING *,15                                                     00096
         MVC   &TEST.PSW,4(1) MOVE OLD PSW FROM PIE                     00097
*                            TESTRAN ABEND MACRO                        00098
&TEST.ERR ABEND 4444,DUMP                                               00099
&TEST.PSW DC   XL8'0'        OLD PROGRAM PSW ON PROGRAM INTERRUPT       00100
         DROP  15                                                       00101
         USING &AREA,13      REESTABLISH CSECT ADDRESSABILITY           00102
&TEST.ABE EQU  *                                                        00103
.CT6     ANOP                                                           00104
         SPACE 2                                                        00105
         MEND                                                           00106
*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB         00107
*              OR VISE VERSA                                            00108
*I/O           SYSUT1  INPUT CLIST                                      00109
*              SYSUT2  OUTPUT CLIST                                     00110
*              SYSPRINT LISTING                                         00111
*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8               00112
*              FB IN 73-80                                              00113
*              RETURN CODE                                              00114
*              8 JOB TERMINATED BEFORE START OF COPY                    00115
*              12 JOB TERMINATED AFTER START OF COPY                    00116
*                                                                       00117
*        R11   RETURN                                                   00118
*        R10   DCB TEMPLATE                                             00119
*        R7    OUTPUT POINTER                                           00120
*        R6    INPUT POINTER                                            00121
*        R5    LENGTH CODE                                              00122
*        R4    INPUT START OF BLOCK                                     00123
*        R3    OUTPUT START OF BLOCK                                    00124
         SYMBR                                                          00125
TEST20   EQU   X'20'                                                    00126
         EJECT                                                          00127
CNVCLIST CSECT                                                          00128
         SAVEX SAVEAREA,1,COPYCLST                                      00129
         SPACE                                                          00130
         OPEN  (CLISTIN,(INPUT))                                        00131
         SPACE                                                          00132
         OPEN  (CLISTOUT,(OUTPUT))                                      00133
         SPACE                                                          00134
         USING IHADCB,R10                                               00135
         LA    R10,CLISTIN              USE DCB NAMES FOR INPUT DCB     00136
         BAL   R11,TESTVORF                                             00137
         BAL   R11,GETMAIN              GET CORE FOR INPUT BLOCK        00138
         LR    R4,R1                    SAVE INPUT BLOCK ADDRESS        00139
         LA    R10,CLISTOUT             USE DCB NAMESFOR  OUTPUT DCB    00140
         BAL   R11,TESTVORF                                             00141
         BAL   R11,GETMAIN              GETMAIN FOR OUTPUT BLOCK        00142
         LR    R3,R1                    SAVE OUTPUT BLOCK ADDRESS       00143
         TM    SWITCH,X'80'             IF 1 FILE IS F AND 1 V          00144
         BO    SAVEOUT                    CONTINUE                      00145
         MVC   ERRORMSG,MSG3                                            00146
         MVC   RC,=H'8'                                                 00147
         B     WRITERR                                                  00148
         SPACE 2                                                        00149
TESTVORF EQU   *                                                        00150
         TM    DCBRECFM,X'C0'           CHECK FOR V OR F                00151
         BM    CONTVF                   IF NOT V OR F ERROR             00152
         MVC   ERRORMSG,MSG1                                            00153
         MVC   RC,=H'08'                                                00154
         B     WRITERR                                                  00155
CONTVF   TM    DCBRECFM,X'80'           IF V                            00156
         BZ    EXITVORF                   EXIT                          00157
         XI    SWITCH,X'80'             FIRST F TURNS ON-SECOND OFF     00158
         CLC   DCBLRECL,=H'80'          IF F AND LRECL NOT = 80         00159
         BE    EXITVORF                   THEN ERROR                    00160
         MVC   ERRORMSG,MSG2                                            00161
         MVC   RC,=H'8'                                                 00162
         B     WRITERR                                                  00163
EXITVORF BR    R11                      RETURN                          00164
         SPACE 2                                                        00165
GETMAIN  EQU   *                                                        00166
         LH    R0,DCBBLKSI              GET C0RE F0R PR0CESSING AN      00167
         GETMAIN R,LV=(0)                 INPUT BL0CK                   00168
         SPACE                                                          00169
         BR    R11                                                      00170
         SPACE 2                                                        00171
SAVEOUT  EQU   *                       SAVE DATA FOR MAINLINE           00172
         MVC   OUTBLKSI,DCBBLKSI                                        00173
         LR    R7,R3                   INITIALIZE OUTPUT POINTER        00174
         TM    DCBRECFM,X'80'          IF OUTPUT IS V                   00175
         BZ    SAVEIN                    SAVE INPUT END OF BLOCK        00176
         OI    SWITCH,TEST20           ELSE SET INPUT SWITCH TO V       00177
         LH    R12,DCBBLKSI                                             00178
         LA    R12,0(R12,R3)           SAVE OUTPUT END OF FIXED BLOCK   00179
         ST    R12,ENDF                                                 00180
         LA    R10,CLISTIN                                              00181
         B     INITREAD                                                 00182
         SPACE                                                          00183
SAVEIN   LA    R10,CLISTIN                                              00184
         LH    R12,DCBBLKSI            SAVE INPUT END OF FIXED BLOCK    00185
         LA    R12,0(R12,R4)                                            00186
         ST    R12,ENDF                                                 00187
         LH    R12,OUTBLKSI            SAVE MAXIMUM END OF OUTPUT       00188
         LA    R12,0(R12,R3)             VARIABLE BLOCK                 00189
           ST  R12,ENDV                                                 00190
         LA    R7,4(R7)                POINT PAST BLK COUNT FOR V       00191
         SPACE 2                                                        00192
INITREAD EQU   *                                                        00193
         CLOSE (CLISTIN)                                                00194
         MVI   DCBRECFM,X'C0'          SET INPUT RECFM TO U             00195
         MVI   CLISTOUT+36,X'C0'       SET OUTPUT RECFM TO U            00196
         OPEN  (CLISTIN,(INPUT))                                        00197
READDIR  EQU   *                                                        00198
         OI    SWITCH,X'40'             SET DIRECTORY READ ON           00199
         READ  DECB1,SF,CLISTIN,DIRIN,256                               00200
         CHECK DECB1                                                    00201
         NOTE CLISTIN                                                   00202
         XI    DIRSW,X'FF'             SINCE SAVETTR POINTS TO          00203
         CLI   DIRSW,X'00'             BEGINNING OF DIRECTORY, READ     00204
         BE    READDIR                 TWICE AFTER FIRST READ.          00205
         SPACE                                                          00206
         ST    R1,SAVETTR              SAVE POINTER TO DIRECTORY        00207
         LH    R9,DIRIN                                                 00208
         STH   R9,DIRLEFT               SAVE DIRECTORY LENGTH           00209
         LA    R9,DIRIN+2                                               00210
         ST    R9,NEXTMEM                                               00211
         SPACE 2                                                        00212
GETMEM   EQU   *                        GET BLOCK OF DATA               00213
         ZAP   SEQCOUNT,=P'0'           ZERO OUT SEQUENCE COUNT FOR MEM 00214
         L     R8,NEXTMEM               LOAD ADDRESS OF MEMBER NAME     00215
         CLC   HIVALUE,0(R8)            IF MEMBER NAM = HIVALUES        00216
         BE    EOJ                        GO TO END OF JOB              00217
         NI    11(R8),X'1F'                                             00218
         MVC   DIRLIST+11(63),11(R8)    MOVE USER DATA TO DIRLIST       00219
         MVC   NAME,0(R8)               PUT NAME IN OUTPUT DIRECT LIST  00220
         SR    R12,R12                  CLEAR REGISTER                  00221
         IC    R12,11(R8)               LOAD # OF HALFWORDS OF USERDATA 00222
         LA    R12,12(R12,R12)          DOUBLE AND ADD 12               00223
         LA    R9,0(R12,R8)             COMPUTENEXT MEMBER DIR ADDA     00224
         ST    R9,NEXTMEM               SAVE ADDRESS OF NEXT MEMBER     00225
         LH    R9,DIRLEFT               COMPUTE BYTES LEFT IN           00226
         SR    R9,R12                     DIRECTORY                     00227
         STH   R9,DIRLEFT                                               00228
         NI    11(R8),X'00'             CLEAR C  OF TTRC                00229
         LA    R8,8(R8)                 LOAD ADDRESS OF TTR             00230
         NI    SWITCH,X'BF'             TURN DIRECTORY READ SW  OFF     00231
         POINT CLISTIN,(8)                                              00232
         SPACE                                                          00233
       LH    R8,DCBBLKSI                LOAD INPUT BLKSIZE              00234
READBLK  READ  DECB2,SF,CLISTIN,(4),(8)                                 00235
         SPACE                                                          00236
         CHECK DECB2                                                    00237
         SPACE                                                          00238
         TM    SWITCH,TEST20           IF INPUT IS F                    00239
         BZ    FTOV                      CONVERT FIXED TO VARIABLE      00240
         SPACE 2                                                        00241
VTOF     EQU   *                                                        00242
         LH    R12,0(R4)               ADD BLKSIZE AND STARTING         00243
         AR    R12,R4                    ADDRESS                        00244
         ST    R12,ENDV                  GIVING  ENDING ADDRESS         00245
         LR    R6,R4                   LOAD POINTER TO V INPUT          00246
         LA    R6,4(R6)                POINT TO FIRST LRECL             00247
         SPACE                                                          00248
GETREC   MVC   HALFWORD,0(R6)                                           00249
         LH    R5,HALFWORD                                              00250
         CH    R5,=H'255'              IF LRECL IS GREATER THAN 256     00251
         BL    *+20                      ERROR                          00252
         MVC   ERRORMSG,MSG4             MESSAGE                        00253
         MVC   RC,=H'12'                 RETURN CODE                    00254
         B     WRITERR                                                  00255
         SH    R5,=H'12'               POINT PAST 4 BYTE LRECL AND      00256
         LA    R6,12(R6)                 8 BYTE LINE SEQUENCE FIELD     00257
         SPACE                                                          00258
LOOPREC  STH   R5,LRECL                SAVE LRECL                       00259
         CH    R5,=H'71'                IF LRECL GREATER THAN 71        00260
         BH    SPLITREC                  SPLIT RECORD                   00261
         BCTR  R5,0                    MAKE LENGTH CODE                 00262
         LA    R12,0(R5,R6)            POINT TO LAST BYTE OF REC        00263
         MVC   REC80,REC80-1           CLEAR RECORD AREA                00264
         CLI   0(R12),C'+'             IF LAST BYTE = '+'           SBG 00265
         BNE   SKIPLOOP                  MOVE '+' TO COLUMN 72          00266
         MVI   REC80+71,C'+'                                        SBG 00267
         MVI   0(R12),C' '             BLANK OUT OLD '+'            SBG 00268
         LA    R9,REC80+71             LOAD ADDRESS COLUMN 72           00269
BACKLOOP BCTR  R9,0                                                     00270
         BCTR  R12,0                                                    00271
         CLI   0(R12),C' '             IF LAST BYTE IS SPACE            00272
         BE    SKIPLOOP                  EXIT                           00273
         CR    R6,R12                  IF AT START OF RECORD            00274
         BH    SKIPLOOP                  DONT MOVE ANYMORE              00275
         MVC   0(1,R9),0(R12)          MOVE CONT WORD TO END OF OUTREC  00276
         MVI   0(12),C' '              BLANKOUT CONT INPUT WORD         00277
         B     BACKLOOP                                                 00278
SKIPLOOP EX    R5,MOVE80               MOVE RECORD                      00279
         BAL   R11,WRITEF                                               00280
         LA    R5,1(R5)                                                 00281
         LA    R6,0(R5,R6)             INCREMENT CURRET POINTER BY LENG 00282
         C     R6,ENDV                 IF ADDRESS POINTER IS LESS THAN  00283
         BL    GETREC                    END ADDRESS GO TO GETREC       00284
         B     READBLK                 ELSE READ A BLOCK                00285
         SPACE 2                                                        00286
SPLITREC EQU   *                                                        00287
         LH    R5,=H'70'                                                00288
SPLTLOOP LA    R12,0(R5,R6)            ADDRESS OF END OF REC TO BE MOVE 00289
         CLI   0(R12),C' '             FIND A BLANK SO WORD IS NOT      00290
         BE    CONTSPLT                  SPLIT                          00291
         BCTR  R5,0                                                     00292
*        B     SPLTLOOP              IF LONG COMMENTS WE GET LOOP   SBG 00293
CONTSPLT EQU   *                                                        00294
         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD              00295
         MVI   REC80+71,C'+'           MOVE IN CONTUATION CHARACTER SBG 00296
         EX    R5,MOVE80               MOVE TO WRITE AREA               00297
         BAL   R11,WRITEF                                               00298
         LA    R12,1(R5)               ADD 1 REC LENGTH OF RECORD       00299
         LH    R5,LRECL                  WRITEN                         00300
         SR    R5,R12                  SUBTRACT FROM LRECL              00301
         LA    R6,0(R12,R6)            INCREMENT IPOINTER BY LENGTH     00302
         B     LOOPREC                 FINISH RECORD                    00303
         SPACE                                                          00304
WRITEF   EQU   *                                                        00305
         AP    SEQCOUNT,=P'10'         PLACE SEQUENCE NUMBER IN         00306
         UNPK  REC80+72(8),SEQCOUNT      POSITIONS 73-80                00307
         MVI   REC80+79,C'0'           MAKE LAST POS CHAR ZERO          00308
         MVC   0(80,R7),REC80          MOVE RECORD TO OUTPUT            00309
         LA    R7,80(R7)               INCREMENT POINTER                00310
         C     R7,ENDF                 IF POINTER IS LESS THAN ENDOFBLK 00311
         BCR   4,R11                     RETURN                         00312
         SR    R7,R3                   LOAD BLKSIZE                     00313
         B     WRITEOUT                ELSE WRITEOUT BLOCK              00314
         SPACE 2                                                        00315
FTOV     EQU   *                                                        00316
         LA    R12,0(R8,R4)            FIND END OF BLOCK ADRESS         00317
         L     R9,DECB2+16             LOAD IOB ADDRESS                 00318
         LH    R9,14(R9)               LOAD LENGTH BLOCK IS SHORT       00319
         SR    R12,R9                  SUBTRACT FROM END OF FULL BLK    00320
         ST    R12,ENDF                  GIVING REAL END OF BLOCK       00321
         LR    R6,R4                   POINT TO START OF INPUT BLOCK    00322
NEXTFREC EQU   *                                                        00323
         LA    R5,70(R6)               POINT TO LAST CHAR BEFORE CONT   00324
LOOPFV   EQU   *                                                        00325
         CLI   0(R5),C' '              FIND LAST NON BLANK CHARACTER    00326
         BNE   FOUNDATA                                                 00327
         BCTR  R5,0                                                     00328
         B     LOOPFV                                                   00329
         SPACE                                                          00330
FOUNDATA EQU   *                                                        00331
         SR    R5,R6                   SUBTRACT START FROM END GIV LENG 00332
         CH    R5,=H'10'                                                00333
         BH    *+8                     IF LENGTH CODE IS LESS THAN 10   00334
         LA    R5,10                     USE 10                         00335
         CLI   71(R6),C'+'             IF THERE IS  NO CONTINUATION SBG 00336
         BNE   WRITEV                    GO TO WRITEV                   00337
         CLI   70(R6),C' '             IF POS 71 IS BLANK               00338
         BNE   *+8                       PUT 1 BLANK BEFORE CONTINUATON 00339
         LA    R5,1(R5)                ELSE NONE                        00340
         LA    R5,1(R5)                                                 00341
         LA    R12,0(R5,R6)            PUT + IN LAST BYTE OF        SBG 00342
         MVI   0(R12),C'+'               INPUT RECORD TO BE MOVED   SBG 00343
         SPACE                                                          00344
WRITEV   EQU   *                                                        00345
         LA    R12,13(R5,R7)           LOAD ADDRESS END OF OUTPUT REC   00346
         C     R12,ENDV                IF ENDOFREC IS LESS THAN ENDOFBL 00347
         BNH   EXMOVEV                   MOVE DATA                      00348
         SR    R7,R3                   ELSE FIND BLK LENGTH             00349
         STH   R7,0(R3)                  STORE IN OUTPUT BLOCK          00350
         BAL   R11,WRITEOUT              WRITE BLOCK                    00351
         LA    R7,4(R7)                  POINT PAST OUTPUT BLK COUNT    00352
         SPACE                                                          00353
EXMOVEV  EQU   *                                                        00354
         EX    R5,MOVEV                MOVE DATA TO OUTPUT BLOCK        00355
         AP    SEQCOUNT,=P'10'         PUT SEQUENCE NUMBER              00356
         UNPK  4(8,R7),SEQCOUNT          IN OUTPUT DATA SET             00357
         MVI   11(R7),C'0'             MAKE LAST DIGIT CHARACTER 0      00358
         LA    R5,13(R5)               ADD 13 TO LEN CNT GIVING LRECL   00359
         STH   R5,HALFWORD                                              00360
         MVC   0(4,R7),HALFWORD        STORE LRECL IN OUTPUT BLOCK      00361
         LA    R7,0(R5,R7)             INCREMENT OUTPUT POINTER         00362
         LA    R6,80(R6)               INCREMENT  INPUT POINTER         00363
         C     R6,ENDF                 IF LESS THAN END OF BLOCK        00364
         BL    NEXTFREC                  GET NEXT RECORD                00365
         B     READBLK                 ELSE GET NEXT BLOCK              00366
         SPACE 2                                                        00367
WRITEOUT EQU   *                                                        00368
         WRITE DECBA,SF,CLISTOUT,(R3),(R7)    WRITE OUT BLOCK           00369
         SPACE                                                          00370
         CHECK DECBA                                                    00371
         SPACE                                                          00372
         LR    R7,R3                   SET POINTER TO START OF BLOCK    00373
         BR    R11                                                      00374
STOWOUT  EQU   *                                                        00375
         TM    SWITCH,TEST20           IF V TO F                        00376
         BO    STOWVTOF                  CHECK FOR SHORT BLOCK          00377
         SR    R7,R3                   FIND BLOCK LENGTH                00378
         STH   R7,0(R3)                STORE IN BDW                     00379
         MVC   2(2,R3),=H'0'           ZERO OUT REST OF BDW             00380
         B     SHORTBLK                WRITE OUT BLOCK                  00381
STOWVTOF CR    R3,R7                   IF OUTPUT BLOCK IS EMPTY         00382
         BE    *+10                      SKIP WRITING SHORT BLOCK       00383
         SR    R7,R3                   LOAD BLOCK LENGTH                00384
SHORTBLK BAL   R11,WRITEOUT            WRITE SHORT BLOCK                00385
         TM    SWITCH,X'40'            IF DIRECTORY READ                00386
         BO    EOJ                       GO TO  EOJ                     00387
         STOW  CLISTOUT,DIRLIST,A                                       00388
         SPACE                                                          00389
         B     STOWEND(R15)                                             00390
STOWEND  B     CHECKEND                 GOOD STOW                       00391
         B     ERRA                                                     00392
         NOP   ERRA                                                     00393
         B     ERRB                                                     00394
         B     ERRC                                                     00395
         NOP   ERRA                                                     00396
ERRD     MVC   ERRORMSG,MSGD                                            00397
         B     ERR                                                      00398
ERRC     MVC   ERRORMSG,MSGC                                            00399
         B     ERR                                                      00400
ERRB     MVC   ERRORMSG,MSGB                                            00401
         B     ERR                                                      00402
ERRA     MVC   ERRORMSG,MSGA                                            00403
ERR      MVC   RC,=H'12'                                                00404
         B     WRITERR                                                  00405
         SPACE                                                          00406
CHECKEND EQU   *                                                        00407
         AP    OUTCOUNT,=P'1'          COUNT MEMBERS MOVED              00408
         TM    SWITCH,TEST20           IF V TO F                        00409
         BO    *+8                        CHECK DIRECTORY               00410
         LA    R7,4(R7)                ELSE ADD 4 BYTES FOR OUTPUT BDW  00411
         LA    R12,2                                                    00412
         CH    R12,DIRLEFT             IF DIRECTORY BLOCK IS NOT EMPTY  00413
         BL    GETMEM                     GET NEXT MEMBER               00414
         POINT CLISTIN,SAVETTR          ELSE READ NEW DIRECTORY         00415
         SPACE                                                          00416
         B     READDIR                                                  00417
         SPACE 2                                                        00418
WRITERR  EQU   *                                                        00419
         BAL   R11,WRITETIT                                             00420
         MVC   PRTLINE,ERRLINE                                          00421
         BAL   R11,PUTPRINT                                             00422
         CLC   RC,=H'12'               IF COPY STARTED                  00423
         BNE   EXIT                      PRINT TOTALS                   00424
         BAL   R11,COUNTP                                               00425
         B     EXIT                                                     00426
         SPACE 2                                                        00427
EOJ      BAL   R11,WRITETIT                                             00428
         MVC   ERRORMSG(14),=C' COPY COMPLETE'                          00429
         MVC   PRTLINE,ERRLINE                                          00430
         BAL   R11,PUTPRINT                                             00431
         BAL   R11,COUNTP                                               00432
         SPACE 2                                                        00433
EXIT     EQU   *                                                        00434
         CLOSE (CLISTIN,,CLISTOUT,,PRINT)                               00435
         LH    R15,RC                  LOAD RETURN CODE                 00436
         L     R13,SAVEAREA+4                                           00437
         LM    R0,R12,20(R13)          RESTORE REGS 0-12                00438
         L     R14,12(R13)             RESTORE REG 14                   00439
         BR    R14                                                      00440
         SPACE 2                                                        00441
WRITETIT EQU   *                                                        00442
         OPEN  (PRINT,(OUTPUT))                                         00443
         MVC   PRTLINE,TITLE                                            00444
         LH    R12,RC                                                   00445
         CVD   R12,WORK                                                 00446
         UNPK  RCP,WORK                                                 00447
         OI    RCP+1,X'F0'                                              00448
         B     PUTPRINT                                                 00449
COUNTP   UNPK  OUTP,OUTCOUNT           MOVE NO OF MEMBERS MOVED         00450
         OI    OUTP+4,X'F0'              TO PRINTLINE                   00451
         MVC   PRTLINE,COUNTLN                                          00452
         SPACE                                                          00453
PUTPRINT PUT   PRINT,PRTLINE                                            00454
         SPACE                                                          00455
         BR    R11                                                      00456
         SPACE 2                                                        00457
*EXECUTED INSTRUCTIONS                                                  00458
MOVEV    MVC   12(1,R7),0(R6)                                           00459
MOVE80   MVC   REC80(1),0(R6)                                           00460
         EJECT                                                          00461
CLISTIN  DCB   DSORG=PO,MACRF=R,DDNAME=SYSUT1,EODAD=STOWOUT             00462
         SPACE 2                                                        00463
CLISTOUT DCB   DSORG=PO,MACRF=W,DDNAME=SYSUT2                           00464
         SPACE 2                                                        00465
PRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,            X00466
               LRECL=121,BLKSIZE=605                                    00467
         EJECT                                                          00468
*WORK FIELDS                                                            00469
         SPACE                                                          00470
WORK     DC    D'0'                                                     00471
FULLWORD DS    0F                                                       00472
HALFWORD DC    H'0'                                                     00473
         DC    H'0'                                                     00474
SAVETTR  DC    F'0'                                                     00475
READADD  DC    F'0'                                                     00476
ENDV     DC    F'0'                                                     00477
ENDF     DC    F'0'                                                     00478
SAVERTN  DC    F'0'                                                     00479
NEXTMEM  DC    F'0'                                                     00480
OUTBLKSI DC    H'0'                                                     00481
DIRLEFT  DC    H'0'                                                     00482
BLKIN    DC    H'0'                                                     00483
RECIN    DC    H'0'                                                     00484
RC       DC    H'0'                                                     00485
LRECL    DC    H'0'                                                     00486
OUTCOUNT DC    PL4'0'                                                   00487
DIRSW    DC    X'00'                                                    00488
SWITCH   DC    XL1'00'                                                  00489
HIVALUE  DC    XL8'FFFFFFFFFFFFFFFF'                                    00490
SEQCOUNT DC    PL4'0'                                                   00491
         SPACE                                                          00492
         DS    0F                                                       00493
DIRIN    DS    CL256                   DIRECTORY BLOCK                  00494
         SPACE                                                          00495
         DS    0F                                                       00496
DIRLIST  DS    0CL74                   DIRECTORY RECORD                 00497
NAME     DC    CL8' '                                                   00498
TTR      DS    CL3                                                      00499
C        DS    CL1                                                      00500
USEADATA DS    CL62                                                     00501
         DC    CL1' '                                                   00502
         SPACE                                                          00503
REC80    DS    CL80                                                     00504
         SPACE 2                                                        00505
*PRINT DATA                                                             00506
         SPACE                                                          00507
TITLE    DC    CL121'1        CLIST CONVERSION'                         00508
ERRLINE  DS    0CL121                                                   00509
         DC    CL7'0   RC='                                             00510
RCP      DC    CL2'  '                                                  00511
         DC    CL5' '                                                   00512
ERRORMSG DC    CL37' '                                                  00513
         DC    CL70' '                                                  00514
COUNTLN  DS    0CL121                                                   00515
         DC    CL29'0'                                                  00516
OUTP     DC    CL5'0'                                                   00517
         DC    CL87' MEMBERS COPIED'                                    00518
PRTLINE  DS    CL121                                                    00519
         SPACE                                                          00520
MSG1     DC    CL37'FILE NOT V OR F'                                    00521
MSG2     DC    CL37'F FORMAT MUST BE LRECL 80'                          00522
MSG3     DC    CL37'INPUT AND OUTPUT CANNOT BE SAME RECFM'              00523
MSG4     DC    CL37'V RECORD WITH LRECL OVER 256'                       00524
MSGA     DC    CL37'DUPLICATE NAME ON DIRECTORY-SYSUT2'                 00525
MSGB     DC    CL37'DIRECTORY OUT OF SPACE'                             00526
MSGC     DC    CL37'1/O ERROR ON SYSUT2 DIRECTORY'                      00527
MSGD     DC    CL37'PROGRAM REGION TOO SMALL'                           00528
         LTORG                                                          00529
DCBDUM   DCBD  DSORG=PO,DEVD=DA                                         00530
         END                                                            00531
